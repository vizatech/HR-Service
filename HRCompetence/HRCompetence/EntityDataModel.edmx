<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="3.0" xmlns:edmx="http://schemas.microsoft.com/ado/2009/11/edmx">
  <!-- EF Runtime content -->
  <edmx:Runtime>
    <!-- SSDL content -->
    <edmx:StorageModels>
    <Schema Namespace="EntityDataModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012.Azure" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
        <EntityType Name="CommentSet">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="Title" Type="nvarchar(max)" Nullable="false" />
          <Property Name="PersonId" Type="int" Nullable="false" />
        </EntityType>
        <EntityType Name="CompetenceSet">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="Title" Type="nvarchar(max)" Nullable="false" />
          <Property Name="IfActive" Type="bit" Nullable="false" />
          <Property Name="PersonId" Type="int" />
        </EntityType>
        <EntityType Name="IndicatorSet">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="Title" Type="nvarchar(max)" Nullable="false" />
          <Property Name="IfActive" Type="bit" Nullable="false" />
          <Property Name="CompetenceId" Type="int" Nullable="false" />
        </EntityType>
        <EntityType Name="PersonSet">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="Title" Type="nvarchar(max)" Nullable="false" />
          <Property Name="IfActive" Type="bit" Nullable="false" />
        </EntityType>
        <Association Name="FK_CompetenceIndicator">
          <End Role="CompetenceSet" Type="Self.CompetenceSet" Multiplicity="1" />
          <End Role="IndicatorSet" Type="Self.IndicatorSet" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="CompetenceSet">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="IndicatorSet">
              <PropertyRef Name="CompetenceId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_PersonComment">
          <End Role="PersonSet" Type="Self.PersonSet" Multiplicity="1" />
          <End Role="CommentSet" Type="Self.CommentSet" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="PersonSet">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="CommentSet">
              <PropertyRef Name="PersonId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_PersonCompetence">
          <End Role="PersonSet" Type="Self.PersonSet" Multiplicity="0..1" />
          <End Role="CompetenceSet" Type="Self.CompetenceSet" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="PersonSet">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="CompetenceSet">
              <PropertyRef Name="PersonId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Function Name="DeleteCommentById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="DeleteCompetenceById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="DeleteIndicatorById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="DeletePersonById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetAllComments" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <Function Name="GetAllCompetences" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <Function Name="GetAllIndicators" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <Function Name="GetAllPersons" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <Function Name="GetCommentById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetCommentByIdPerson" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetCommentByTitleByIdPerson" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetCompetenceByAssociation" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Text" Type="nvarchar(max)" Mode="In" />
        </Function>
        <Function Name="GetCompetenceById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetCompetenceByIdPerson" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetCompetenceByTitleByIdPerson" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetIndicatorById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetIndicatorByIdCompetence" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetIndicatorByTitleByIdCompetence" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetPersonByAssociation" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Text" Type="nvarchar(max)" Mode="In" />
        </Function>
        <Function Name="GetPersonById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
        </Function>
        <Function Name="GetPersonByTitle" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
        </Function>
        <Function Name="PostComment" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
          <Parameter Name="PersonId" Type="int" Mode="In" />
        </Function>
        <Function Name="PostCompetence" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
          <Parameter Name="IfActive" Type="bit" Mode="In" />
          <Parameter Name="PersonId" Type="int" Mode="In" />
        </Function>
        <Function Name="PostIndicator" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
          <Parameter Name="IfActive" Type="bit" Mode="In" />
          <Parameter Name="CompetenceId" Type="int" Mode="In" />
        </Function>
        <Function Name="PostPerson" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
          <Parameter Name="IfActive" Type="bit" Mode="In" />
        </Function>
        <Function Name="PutCommentById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
        </Function>
        <Function Name="PutCompetenceById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
          <Parameter Name="IfActive" Type="bit" Mode="In" />
        </Function>
        <Function Name="PutIndicatorById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
          <Parameter Name="IfActive" Type="bit" Mode="In" />
        </Function>
        <Function Name="PutPersonById" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Id" Type="int" Mode="In" />
          <Parameter Name="Title" Type="nvarchar(max)" Mode="In" />
          <Parameter Name="IfActive" Type="bit" Mode="In" />
        </Function>
        <EntityContainer Name="EntityDataModelStoreContainer">
          <EntitySet Name="CommentSet" EntityType="Self.CommentSet" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="CompetenceSet" EntityType="Self.CompetenceSet" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="IndicatorSet" EntityType="Self.IndicatorSet" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="PersonSet" EntityType="Self.PersonSet" Schema="dbo" store:Type="Tables" />
          <AssociationSet Name="FK_CompetenceIndicator" Association="Self.FK_CompetenceIndicator">
            <End Role="CompetenceSet" EntitySet="CompetenceSet" />
            <End Role="IndicatorSet" EntitySet="IndicatorSet" />
          </AssociationSet>
          <AssociationSet Name="FK_PersonComment" Association="Self.FK_PersonComment">
            <End Role="PersonSet" EntitySet="PersonSet" />
            <End Role="CommentSet" EntitySet="CommentSet" />
          </AssociationSet>
          <AssociationSet Name="FK_PersonCompetence" Association="Self.FK_PersonCompetence">
            <End Role="PersonSet" EntitySet="PersonSet" />
            <End Role="CompetenceSet" EntitySet="CompetenceSet" />
          </AssociationSet>
        </EntityContainer>
      </Schema></edmx:StorageModels>
    <!-- CSDL content -->
    <edmx:ConceptualModels>
      <Schema xmlns="http://schemas.microsoft.com/ado/2009/11/edm" xmlns:cg="http://schemas.microsoft.com/ado/2006/04/codegeneration" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" Namespace="EntityDataModel" Alias="Self" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" annotation:UseStrongSpatialTypes="false">
        <EntityContainer Name="EntityDataModelContainer" annotation:LazyLoadingEnabled="true">
          <EntitySet Name="PersonSet" EntityType="EntityDataModel.Person" />
          <EntitySet Name="CompetenceSet" EntityType="EntityDataModel.Competence" />
          <EntitySet Name="CommentSet" EntityType="EntityDataModel.Comment" />
          <EntitySet Name="IndicatorSet" EntityType="EntityDataModel.Indicator" />
          <AssociationSet Name="PersonCompetence" Association="EntityDataModel.PersonCompetence">
            <End Role="Person" EntitySet="PersonSet" />
            <End Role="Competence" EntitySet="CompetenceSet" />
          </AssociationSet>
          <AssociationSet Name="PersonComment" Association="EntityDataModel.PersonComment">
            <End Role="Person" EntitySet="PersonSet" />
            <End Role="Comment" EntitySet="CommentSet" />
          </AssociationSet>
          <AssociationSet Name="CompetenceIndicator" Association="EntityDataModel.CompetenceIndicator">
            <End Role="Competence" EntitySet="CompetenceSet" />
            <End Role="Indicator" EntitySet="IndicatorSet" />
          </AssociationSet>
          <FunctionImport Name="DeleteCommentById">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="DeleteCompetenceById">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="DeleteIndicatorById">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="DeletePersonById">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetAllComments" ReturnType="Collection(EntityDataModel.GetAllComments_Result)" />
          <FunctionImport Name="GetAllCompetences" ReturnType="Collection(EntityDataModel.GetAllCompetences_Result)" />
          <FunctionImport Name="GetAllIndicators" ReturnType="Collection(EntityDataModel.GetAllIndicators_Result)" />
          <FunctionImport Name="GetAllPersons" ReturnType="Collection(EntityDataModel.GetAllPersons_Result)" />
          <FunctionImport Name="GetCommentById" ReturnType="Collection(EntityDataModel.GetCommentById_Result)">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetCommentByIdPerson" ReturnType="Collection(EntityDataModel.GetCommentByIdPerson_Result)">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetCompetenceById" ReturnType="Collection(EntityDataModel.GetCompetenceById_Result)">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetCompetenceByIdPerson" ReturnType="Collection(EntityDataModel.GetCompetenceByIdPerson_Result)">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetIndicatorById" ReturnType="Collection(EntityDataModel.GetIndicatorById_Result)">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetIndicatorByIdCompetence" ReturnType="Collection(EntityDataModel.GetIndicatorByIdCompetence_Result)">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetPersonById" ReturnType="Collection(EntityDataModel.GetPersonById_Result)">
          <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="PostComment">
            <Parameter Name="Title" Mode="In" Type="String" />
            <Parameter Name="PersonId" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="PostCompetence">
            <Parameter Name="Title" Mode="In" Type="String" />
            <Parameter Name="IfActive" Mode="In" Type="Boolean" />
            <Parameter Name="PersonId" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="PostIndicator">
            <Parameter Name="Title" Mode="In" Type="String" />
            <Parameter Name="IfActive" Mode="In" Type="Boolean" />
            <Parameter Name="CompetenceId" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="PostPerson">
            <Parameter Name="Title" Mode="In" Type="String" />
            <Parameter Name="IfActive" Mode="In" Type="Boolean" />
          </FunctionImport>
          <FunctionImport Name="PutCommentById">
            <Parameter Name="Id" Mode="In" Type="Int32" />
            <Parameter Name="Title" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="PutCompetenceById">
            <Parameter Name="Id" Mode="In" Type="Int32" />
            <Parameter Name="Title" Mode="In" Type="String" />
            <Parameter Name="IfActive" Mode="In" Type="Boolean" />
          </FunctionImport>
          <FunctionImport Name="PutIndicatorById">
            <Parameter Name="Id" Mode="In" Type="Int32" />
            <Parameter Name="Title" Mode="In" Type="String" />
            <Parameter Name="IfActive" Mode="In" Type="Boolean" />
          </FunctionImport>
          <FunctionImport Name="PutPersonById">
            <Parameter Name="Id" Mode="In" Type="Int32" />
            <Parameter Name="Title" Mode="In" Type="String" />
            <Parameter Name="IfActive" Mode="In" Type="Boolean" />
          </FunctionImport>
          <FunctionImport Name="GetPersonByAssociation" ReturnType="Collection(EntityDataModel.GetPersonByAssociation_Result)">
          <Parameter Name="Text" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="GetPersonByTitle" ReturnType="Collection(EntityDataModel.GetPersonByTitle_Result)">
          <Parameter Name="Title" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="GetCommentByTitleByIdPerson" ReturnType="Collection(EntityDataModel.GetCommentByTitleByIdPerson_Result)">
            <Parameter Name="Title" Mode="In" Type="String" />
            <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetCompetenceByAssociation" ReturnType="Collection(EntityDataModel.GetCompetenceByAssociation_Result)">
            <Parameter Name="Text" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="GetCompetenceByTitleByIdPerson" ReturnType="Collection(EntityDataModel.GetCompetenceByTitleByIdPerson_Result)">
            <Parameter Name="Title" Mode="In" Type="String" />
            <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetIndicatorByTitleByIdCompetence" ReturnType="Collection(EntityDataModel.GetIndicatorByTitleByIdCompetence_Result)">
            <Parameter Name="Title" Mode="In" Type="String" />
            <Parameter Name="Id" Mode="In" Type="Int32" />
          </FunctionImport>
        </EntityContainer>
        <EntityType Name="Person">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="Title" Type="String" Nullable="false" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="IfActive" Type="Boolean" Nullable="false" />
          <NavigationProperty Name="Competence" Relationship="EntityDataModel.PersonCompetence" FromRole="Person" ToRole="Competence" />
          <NavigationProperty Name="Comment" Relationship="EntityDataModel.PersonComment" FromRole="Person" ToRole="Comment" />
        </EntityType>
        <EntityType Name="Competence">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="Title" Type="String" Nullable="false" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="IfActive" Type="Boolean" Nullable="false" />
          <NavigationProperty Name="Person" Relationship="EntityDataModel.PersonCompetence" FromRole="Competence" ToRole="Person" />
          <Property Name="PersonId" Type="Int32" Nullable="true" />
          <NavigationProperty Name="Indicator" Relationship="EntityDataModel.CompetenceIndicator" FromRole="Competence" ToRole="Indicator" />
        </EntityType>
        <EntityType Name="Comment">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="Title" Type="String" Nullable="false" MaxLength="Max" Unicode="true" FixedLength="false" />
          <NavigationProperty Name="Person" Relationship="EntityDataModel.PersonComment" FromRole="Comment" ToRole="Person" />
          <Property Name="PersonId" Type="Int32" Nullable="false" />
        </EntityType>
        <EntityType Name="Indicator">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="Title" Type="String" Nullable="false" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="IfActive" Type="Boolean" Nullable="false" />
          <NavigationProperty Name="Competence" Relationship="EntityDataModel.CompetenceIndicator" FromRole="Indicator" ToRole="Competence" />
          <Property Name="CompetenceId" Type="Int32" Nullable="false" />
        </EntityType>
        <Association Name="PersonCompetence">
          <End Type="EntityDataModel.Person" Role="Person" Multiplicity="0..1" />
          <End Type="EntityDataModel.Competence" Role="Competence" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Person">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="Competence">
              <PropertyRef Name="PersonId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="PersonComment">
          <End Type="EntityDataModel.Person" Role="Person" Multiplicity="1" />
          <End Type="EntityDataModel.Comment" Role="Comment" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Person">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="Comment">
              <PropertyRef Name="PersonId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="CompetenceIndicator">
          <End Type="EntityDataModel.Competence" Role="Competence" Multiplicity="1" />
          <End Type="EntityDataModel.Indicator" Role="Indicator" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Competence">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="Indicator">
              <PropertyRef Name="CompetenceId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <ComplexType Name="GetAllComments_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Int32" Name="PersonId" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetAllCompetences_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
          <Property Type="Int32" Name="PersonId" Nullable="true" />
        </ComplexType>
        <ComplexType Name="GetAllIndicators_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
          <Property Type="Int32" Name="CompetenceId" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetAllPersons_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetCommentById_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Int32" Name="PersonId" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetCommentByIdPerson_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Int32" Name="PersonId" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetCompetenceById_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
          <Property Type="Int32" Name="PersonId" Nullable="true" />
        </ComplexType>
        <ComplexType Name="GetCompetenceByIdPerson_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
          <Property Type="Int32" Name="PersonId" Nullable="true" />
        </ComplexType>
        <ComplexType Name="GetIndicatorById_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
          <Property Type="Int32" Name="CompetenceId" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetIndicatorByIdCompetence_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
          <Property Type="Int32" Name="CompetenceId" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetPersonById_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetPersonByAssociation_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetPersonByTitle_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetCommentByTitleByIdPerson_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Int32" Name="PersonId" Nullable="false" />
        </ComplexType>
        <ComplexType Name="GetCompetenceByAssociation_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
          <Property Type="Int32" Name="PersonId" Nullable="true" />
        </ComplexType>
        <ComplexType Name="GetCompetenceByTitleByIdPerson_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
          <Property Type="Int32" Name="PersonId" Nullable="true" />
        </ComplexType>
        <ComplexType Name="GetIndicatorByTitleByIdCompetence_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Title" Nullable="false" />
          <Property Type="Boolean" Name="IfActive" Nullable="false" />
          <Property Type="Int32" Name="CompetenceId" Nullable="false" />
        </ComplexType>
      </Schema>
    </edmx:ConceptualModels>
    <!-- C-S mapping content -->
    <edmx:Mappings>
    <Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
  <EntityContainerMapping StorageEntityContainer="EntityDataModelStoreContainer" CdmEntityContainer="EntityDataModelContainer">
    <EntitySetMapping Name="PersonSet">
      <EntityTypeMapping TypeName="IsTypeOf(EntityDataModel.Person)">
        <MappingFragment StoreEntitySet="PersonSet">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Title" ColumnName="Title" />
          <ScalarProperty Name="IfActive" ColumnName="IfActive" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="CompetenceSet">
      <EntityTypeMapping TypeName="IsTypeOf(EntityDataModel.Competence)">
        <MappingFragment StoreEntitySet="CompetenceSet">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Title" ColumnName="Title" />
          <ScalarProperty Name="IfActive" ColumnName="IfActive" />
          <ScalarProperty Name="PersonId" ColumnName="PersonId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="CommentSet">
      <EntityTypeMapping TypeName="IsTypeOf(EntityDataModel.Comment)">
        <MappingFragment StoreEntitySet="CommentSet">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Title" ColumnName="Title" />
          <ScalarProperty Name="PersonId" ColumnName="PersonId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="IndicatorSet">
      <EntityTypeMapping TypeName="IsTypeOf(EntityDataModel.Indicator)">
        <MappingFragment StoreEntitySet="IndicatorSet">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Title" ColumnName="Title" />
          <ScalarProperty Name="IfActive" ColumnName="IfActive" />
          <ScalarProperty Name="CompetenceId" ColumnName="CompetenceId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
          <FunctionImportMapping FunctionImportName="DeleteCommentById" FunctionName="EntityDataModel.Store.DeleteCommentById" />
          <FunctionImportMapping FunctionImportName="DeleteCompetenceById" FunctionName="EntityDataModel.Store.DeleteCompetenceById" />
          <FunctionImportMapping FunctionImportName="DeleteIndicatorById" FunctionName="EntityDataModel.Store.DeleteIndicatorById" />
          <FunctionImportMapping FunctionImportName="DeletePersonById" FunctionName="EntityDataModel.Store.DeletePersonById" />
          <FunctionImportMapping FunctionImportName="GetAllComments" FunctionName="EntityDataModel.Store.GetAllComments">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetAllComments_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="PersonId" ColumnName="PersonId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetAllCompetences" FunctionName="EntityDataModel.Store.GetAllCompetences">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetAllCompetences_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
                <ScalarProperty Name="PersonId" ColumnName="PersonId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetAllIndicators" FunctionName="EntityDataModel.Store.GetAllIndicators">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetAllIndicators_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
                <ScalarProperty Name="CompetenceId" ColumnName="CompetenceId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetAllPersons" FunctionName="EntityDataModel.Store.GetAllPersons">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetAllPersons_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetCommentById" FunctionName="EntityDataModel.Store.GetCommentById">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetCommentById_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="PersonId" ColumnName="PersonId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetCommentByIdPerson" FunctionName="EntityDataModel.Store.GetCommentByIdPerson">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetCommentByIdPerson_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="PersonId" ColumnName="PersonId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetCompetenceById" FunctionName="EntityDataModel.Store.GetCompetenceById">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetCompetenceById_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
                <ScalarProperty Name="PersonId" ColumnName="PersonId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetCompetenceByIdPerson" FunctionName="EntityDataModel.Store.GetCompetenceByIdPerson">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetCompetenceByIdPerson_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
                <ScalarProperty Name="PersonId" ColumnName="PersonId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetIndicatorById" FunctionName="EntityDataModel.Store.GetIndicatorById">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetIndicatorById_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
                <ScalarProperty Name="CompetenceId" ColumnName="CompetenceId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetIndicatorByIdCompetence" FunctionName="EntityDataModel.Store.GetIndicatorByIdCompetence">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetIndicatorByIdCompetence_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
                <ScalarProperty Name="CompetenceId" ColumnName="CompetenceId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetPersonById" FunctionName="EntityDataModel.Store.GetPersonById">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetPersonById_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="PostComment" FunctionName="EntityDataModel.Store.PostComment" />
          <FunctionImportMapping FunctionImportName="PostCompetence" FunctionName="EntityDataModel.Store.PostCompetence" />
          <FunctionImportMapping FunctionImportName="PostIndicator" FunctionName="EntityDataModel.Store.PostIndicator" />
          <FunctionImportMapping FunctionImportName="PostPerson" FunctionName="EntityDataModel.Store.PostPerson" />
          <FunctionImportMapping FunctionImportName="PutCommentById" FunctionName="EntityDataModel.Store.PutCommentById" />
          <FunctionImportMapping FunctionImportName="PutCompetenceById" FunctionName="EntityDataModel.Store.PutCompetenceById" />
          <FunctionImportMapping FunctionImportName="PutIndicatorById" FunctionName="EntityDataModel.Store.PutIndicatorById" />
          <FunctionImportMapping FunctionImportName="PutPersonById" FunctionName="EntityDataModel.Store.PutPersonById" />
          <FunctionImportMapping FunctionImportName="GetPersonByAssociation" FunctionName="EntityDataModel.Store.GetPersonByAssociation">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetPersonByAssociation_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetPersonByTitle" FunctionName="EntityDataModel.Store.GetPersonByTitle">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetPersonByTitle_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetCommentByTitleByIdPerson" FunctionName="EntityDataModel.Store.GetCommentByTitleByIdPerson">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetCommentByTitleByIdPerson_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="PersonId" ColumnName="PersonId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetCompetenceByAssociation" FunctionName="EntityDataModel.Store.GetCompetenceByAssociation">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetCompetenceByAssociation_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
                <ScalarProperty Name="PersonId" ColumnName="PersonId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetCompetenceByTitleByIdPerson" FunctionName="EntityDataModel.Store.GetCompetenceByTitleByIdPerson">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetCompetenceByTitleByIdPerson_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
                <ScalarProperty Name="PersonId" ColumnName="PersonId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetIndicatorByTitleByIdCompetence" FunctionName="EntityDataModel.Store.GetIndicatorByTitleByIdCompetence">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EntityDataModel.GetIndicatorByTitleByIdCompetence_Result">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Title" ColumnName="Title" />
                <ScalarProperty Name="IfActive" ColumnName="IfActive" />
                <ScalarProperty Name="CompetenceId" ColumnName="CompetenceId" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
  </EntityContainerMapping>
</Mapping></edmx:Mappings>
  </edmx:Runtime>
  <!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
  <edmx:Designer xmlns="http://schemas.microsoft.com/ado/2009/11/edmx">
    <edmx:Connection>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
      </DesignerInfoPropertySet>
    </edmx:Connection>
    <edmx:Options>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="ValidateOnBuild" Value="true" />
        <DesignerProperty Name="EnablePluralization" Value="False" />
        <DesignerProperty Name="CodeGenerationStrategy" Value="Нет" />
        <DesignerProperty Name="UseLegacyProvider" Value="False" />
        <DesignerProperty Name="IncludeForeignKeysInModel" Value="True" />
      </DesignerInfoPropertySet>
    </edmx:Options>
    <!-- Diagram content (shape and connector positions) -->
    <edmx:Diagrams>
    </edmx:Diagrams>
  </edmx:Designer>
</edmx:Edmx>
